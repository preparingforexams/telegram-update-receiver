apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 3
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 100%
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      serviceAccountName: update-receiver
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: api
      volumes:
        - name: bot-configs
          configMap:
            name: bot-configs
      containers:
        - name: api
          image: "{{ .Values.image.name }}:{{ .Values.appVersion }}"
          args:
            - "--log-level"
            - "warning"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ ALL ]
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: "1"
          ports:
            - containerPort: 8000
              name: http
          volumeMounts:
            - mountPath: /etc/prep-update-receiver
              name: bot-configs
          env:
            - name: BOT_CONFIG_PATH
              value: /etc/prep-update-receiver/config.toml
          envFrom:
            - secretRef:
                name: secrets
          startupProbe:
            httpGet:
              port: http
              path: /probe/live
            initialDelaySeconds: 15
            failureThreshold: 10
          livenessProbe:
            httpGet:
              port: http
              path: /probe/live
          readinessProbe:
            httpGet:
              port: http
              path: /probe/live
